# Golangci-lint configuration for Beenet
# Ensures high code quality and consistency

run:
  timeout: 5m
  issues-exit-code: 1
  tests: true

output:
  formats:
    - format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters-settings:
  errcheck:
    check-type-assertions: true
    check-blank: true

  govet:
    enable-all: true
    
  shadow:
    strict: true

  gocyclo:
    min-complexity: 15

  dupl:
    threshold: 100

  goconst:
    min-len: 3
    min-occurrences: 3

  misspell:
    locale: US

  lll:
    line-length: 120

  goimports:
    local-prefixes: github.com/WebFirstLanguage/beenet

  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc

  funlen:
    lines: 100
    statements: 50

  gocognit:
    min-complexity: 20

  nestif:
    min-complexity: 4

  mnd:
    checks:
      - argument
      - case
      - condition
      - operation
      - return
      - assign
    ignored-numbers:
      - 0
      - 1
      - 2
      - 3
    ignored-functions:
      - strings.SplitN

  godox:
    keywords:
      - NOTE
      - OPTIMIZE
      - HACK

  depguard:
    list-type: blacklist
    packages:
      - github.com/sirupsen/logrus
    packages-with-error-message:
      - github.com/sirupsen/logrus: "logging is allowed only by logutils.Log"

linters:
  disable-all: true
  enable:
    - bodyclose
    - depguard
    - dogsled
    - dupl
    - errcheck
    - exportloopref
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - mnd
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - lll
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - rowserrcheck
    - shadow
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - whitespace

issues:
  exclude-dirs:
    - vendor
  exclude-files:
    - ".*\\.pb\\.go$"
  exclude-rules:
    - path: _test\.go
      linters:
        - mnd
        - funlen
        - gocyclo
        - dupl

    - path: cmd/
      linters:
        - gochecknoinits

    - linters:
        - lll
      source: "^//go:generate "

  exclude:
    - "Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*printf?|os\\.(Un)?Setenv). is not checked"
    - "exported (type|method|function) (.+) should have comment or be unexported"
    - "ST1000: at least one file in a package should have a package comment"

  max-issues-per-linter: 0
  max-same-issues: 0
  new: false
